name: Test deploy

on:
  workflow_dispatch:

jobs:
  sync-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Clone woocommerce repo (source)
        run: |
          git clone --branch=trunk https://github.com/woocommerce/woocommerce.git /tmp/source
          ls -la /tmp/source/docs

      # - name: Install dependencies and build docs
      #   working-directory: /tmp/source/docs/_docu-tools
      #   run: |
      #     npm install
      #     npm run deploy-build

      - name: Deploy docs to target repo
        run: |
          BRANCH_NAME="docs-build-$(date +'%Y%m%d-%H%M%S')"

          # Get list of changed files in WooCommerce /docs directory
          cd /tmp/source
          git fetch origin trunk
          DOC_SOURCE_FILES=$(git diff --name-only HEAD~1 HEAD -- docs/)

          # Clone target repo
          git clone https://x-access-token:${DEPLOY_PAT}@github.com/${TARGET_REPO} /tmp/target-repo
          cd /tmp/target-repo

          # Checkout production and update
          git checkout production
          git pull origin production

          # Create new branch
          git checkout -b $BRANCH_NAME

          # Git identity for commit
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          # Copy built docs
          mkdir -p plugins/docu-loader/docs-build
          cp -r /tmp/source/docs/_docu-tools/build/* plugins/docu-loader/docs-build/

          # Stage changes
          git add plugins/docu-loader/docs-build/

          # Check if there's anything to commit
          if git diff --cached --quiet; then
            echo "No documentation changes detected. Skipping commit and PR."
            exit 0
          else
            # Get staged files (built files)
            BUILT_DOC_FILES=$(git diff --name-only --cached)

            # Construct PR body
            PR_BODY="This PR contains the latest documentation build updates.\n\n"
            PR_BODY+="**Changed source files in WooCommerce (/docs):**\n"
            if [ -n "$DOC_SOURCE_FILES" ]; then
              while IFS= read -r file; do
                PR_BODY+="\n- \`${file}\`"
              done <<< "$DOC_SOURCE_FILES"
            else
              PR_BODY+="\n_None detected_"
            fi

            PR_BODY+="\n\n**Updated built files in target repo:**\n"
            while IFS= read -r file; do
              PR_BODY+="\n- \`${file}\`"
            done <<< "$BUILT_DOC_FILES"

            # Preview PR body for testing
            echo -e "ðŸ§ª Previewing PR body:\n"
            echo -e "$PR_BODY"

            # Uncomment below to enable PR creation
            # git commit -m "Update documentation build from $(date)"
            # git push origin $BRANCH_NAME
            # gh pr create --title "Update documentation build" \
            #              --body "$PR_BODY" \
            #              --reviewer piinthecloud
          fi
        env:
          DEPLOY_PAT: ${{ secrets.DEPLOY_PAT }}
          GH_TOKEN: ${{ secrets.DEPLOY_PAT }}
          TARGET_REPO: ${{ secrets.TARGET_REPO }}
