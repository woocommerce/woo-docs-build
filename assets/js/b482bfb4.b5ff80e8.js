"use strict";(self.webpackChunkwoo_docs_migration=self.webpackChunkwoo_docs_migration||[]).push([[4233],{338:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"contribution/contributing/naming-conventions","title":"Naming conventions","description":"PHP","source":"@site/../contribution/contributing/naming-conventions.md","sourceDirName":"contribution/contributing","slug":"/contribution/contributing/naming-conventions","permalink":"/docs/contribution/contributing/naming-conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/woocommerce/woocommerce/tree/docusaurus-docs-prep/docs/docs/../contribution/contributing/naming-conventions.md","tags":[],"version":"current","frontMatter":{"post_title":"Naming conventions","sidebar_label":"Naming conventions"},"sidebar":"docsSidebar","previous":{"title":"Minification of SCSS and JS","permalink":"/docs/contribution/contributing/minification-of-SCSS-and-JS"},"next":{"title":"Reporting security issues","permalink":"/docs/contribution/contributing/reporting-security-issues"}}');var o=s(4848),c=s(8453);const r={post_title:"Naming conventions",sidebar_label:"Naming conventions"},t="Naming conventions",d={},l=[{value:"PHP",id:"php",level:2},{value:"JS",id:"js",level:2},{value:"CSS and SASS",id:"css-and-sass",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"naming-conventions",children:"Naming conventions"})}),"\n",(0,o.jsx)(n.h2,{id:"php",children:"PHP"}),"\n",(0,o.jsxs)(n.p,{children:["WooCommerce core generally follows ",(0,o.jsx)(n.a,{href:"https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#naming-conventions",children:"WordPress PHP naming conventions"}),". On top of that, function, class, and hook names should be prefixed. For functions the prefix is ",(0,o.jsx)(n.code,{children:"wc_"}),", for classes is ",(0,o.jsx)(n.code,{children:"WC_"})," and for hooks is ",(0,o.jsx)(n.code,{children:"woocommerce_"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Function name examples:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"wc_get_product()"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"wc_is_active_theme()"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Class name examples:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"WC_Breadcrumb"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"WC_Cart"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Hook name examples (actions or filters):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"woocommerce_after_checkout_validation"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"woocommerce_get_formatted_order_total"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["There are however some exceptions which apply to classes defined inside ",(0,o.jsx)(n.code,{children:"src/"}),". Within this directory:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["We do not use the ",(0,o.jsx)(n.code,{children:"WC_"})," prefix for class names (the prefix is not needed, because all of the classes in this location live within the ",(0,o.jsx)(n.code,{children:"Automattic\\WooCommerce"})," namespace)"]}),"\n",(0,o.jsxs)(n.li,{children:["Classes are named using the ",(0,o.jsx)(n.code,{children:"CamelCase"})," convention (however, method names should still be ",(0,o.jsx)(n.code,{children:"underscore_separated"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Class files should match the class name and do not need the ",(0,o.jsx)(n.code,{children:"class-"})," prefix (for example, the filename for the ",(0,o.jsx)(n.code,{children:"StringUtil"})," class is ",(0,o.jsx)(n.code,{children:"StringUtil.php"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"js",children:"JS"}),"\n",(0,o.jsxs)(n.p,{children:["WooCommerce core follows ",(0,o.jsx)(n.a,{href:"https://developer.wordpress.org/coding-standards/wordpress-coding-standards/javascript/#naming-conventions",children:"WordPress JS naming conventions"}),". As with PHP, function, class, and hook names should be prefixed, but the convention for JS is slightly different, and camelCase is used instead of snake_case. For functions, the prefix is ",(0,o.jsx)(n.code,{children:"wc"}),", for classes is ",(0,o.jsx)(n.code,{children:"WC"})," and for hooks is ",(0,o.jsx)(n.code,{children:"woocommerce"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Function name example:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"wcSettings()"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Class name example:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"WCOrdersTable"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Hook name example (actions or filters):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"woocommerceTracksEventProperties"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"css-and-sass",children:"CSS and SASS"}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://github.com/woocommerce/woocommerce/wiki/CSS-SASS-coding-guidelines-and-naming-conventions",children:"CSS SASS coding guidelines and naming conventions"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const o={},c=i.createContext(o);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);