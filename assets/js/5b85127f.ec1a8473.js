"use strict";(self.webpackChunkwoo_docs_migration=self.webpackChunkwoo_docs_migration||[]).push([[4497],{715:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"block-development/product-editor-development/block-template-lifecycle","title":"Managing the lifecycle of WooCommerce block templates","description":"A block template is a tree structure of blocks that define the product editor\'s form structure.","source":"@site/../block-development/product-editor-development/block-template-lifecycle.md","sourceDirName":"block-development/product-editor-development","slug":"/block-development/product-editor-development/block-template-lifecycle","permalink":"/docs/block-development/product-editor-development/block-template-lifecycle","draft":false,"unlisted":false,"editUrl":"https://github.com/woocommerce/woocommerce/tree/docusaurus-docs-prep/docs/docs/../block-development/product-editor-development/block-template-lifecycle.md","tags":[],"version":"current","frontMatter":{"post_title":"Managing the lifecycle of WooCommerce block templates","sidebar_label":"Block template lifecycle"},"sidebar":"docsSidebar","previous":{"title":"Product Editor","permalink":"/docs/block-development/product-editor-development/"},"next":{"title":"How-to Guides for the Product form","permalink":"/docs/block-development/product-editor-development/how-to-guides/"}}');var l=o(4848),i=o(8453);const c={post_title:"Managing the lifecycle of WooCommerce block templates",sidebar_label:"Block template lifecycle"},r="Managing the lifecycle of WooCommerce block templates",d={},a=[{value:"Registration",id:"registration",level:2},{value:"Creation",id:"creation",level:2},{value:"Block addition and removal",id:"block-addition-and-removal",level:2},{value:"Actions",id:"actions",level:3},{value:"Sent to client",id:"sent-to-client",level:2},{value:"Rendered on client",id:"rendered-on-client",level:2}];function s(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"managing-the-lifecycle-of-woocommerce-block-templates",children:"Managing the lifecycle of WooCommerce block templates"})}),"\n",(0,l.jsx)(t.p,{children:"A block template is a tree structure of blocks that define the product editor's form structure."}),"\n",(0,l.jsx)(t.p,{children:"A template can be modified by using the block template API to add new blocks (groups, sections, and fields) as well as remove existing ones."}),"\n",(0,l.jsx)(t.p,{children:"A template is implemented in PHP and sent to the client. The client then renders the template using React."}),"\n",(0,l.jsx)(t.p,{children:"The lifecycle of a template is as follows:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"#registration",children:"Registration"})}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"#creation",children:"Creation"})}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"#block-addition-and-removal",children:"Block addition and removal"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"#actions",children:"Actions"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"#sent-to-client",children:"Sent to client"})}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"#rendered-on-client",children:"Rendered on client"})}),"\n"]}),"\n",(0,l.jsx)(t.h2,{id:"registration",children:"Registration"}),"\n",(0,l.jsxs)(t.p,{children:["A template class can be registered with the ",(0,l.jsx)(t.code,{children:"Automattic\\WooCommerce\\LayoutTemplates\\LayoutTemplateRegistry"}),". All template classes must implement the ",(0,l.jsx)(t.code,{children:"Automattic\\WooCommerce\\Admin\\BlockTemplates\\BlockTemplateInterface"})," interface."]}),"\n",(0,l.jsxs)(t.p,{children:["Registration is required in order for the template to be available to be sent to the client (via the ",(0,l.jsx)(t.code,{children:"/wc/v3/layout-templates"})," REST API endpoint)."]}),"\n",(0,l.jsxs)(t.p,{children:["The default templates are registered in the ",(0,l.jsx)(t.code,{children:"rest_api_init"})," action hook, priority 10."]}),"\n",(0,l.jsx)(t.p,{children:"Blocks can be added or removed from a template before or after it is registered, but the template cannot be modified after it is sent to the client."}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsxs)(t.strong,{children:["In order for the template to be sent to the client, it should be registered in or before the ",(0,l.jsx)(t.code,{children:"rest_request_before_callbacks"})," filter hook. They can be registered in the ",(0,l.jsx)(t.code,{children:"rest_api_init"})," hook."]})}),"\n",(0,l.jsx)(t.h2,{id:"creation",children:"Creation"}),"\n",(0,l.jsxs)(t.p,{children:["Templates are instantiated by the handler for the ",(0,l.jsx)(t.code,{children:"/wcv3/layout-templates"})," REST API endpoint."]}),"\n",(0,l.jsx)(t.h2,{id:"block-addition-and-removal",children:"Block addition and removal"}),"\n",(0,l.jsxs)(t.p,{children:["After a template instance is created, blocks can be added to or removed from a template using the ",(0,l.jsx)(t.code,{children:"add_block()"})," and ",(0,l.jsx)(t.code,{children:"remove_block()"})," methods, or similar methods that are specific to the type of block being added or removed, such as ",(0,l.jsx)(t.code,{children:"add_section()"})," and ",(0,l.jsx)(t.code,{children:"remove_section()"}),"."]}),"\n",(0,l.jsxs)(t.p,{children:["See the ",(0,l.jsx)(t.a,{href:"https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Admin/BlockTemplates/README.md",children:"Automattic\\WooCommerce\\Admin\\BlockTemplates"})," documentation for more information about these methods."]}),"\n",(0,l.jsx)(t.p,{children:"You can modify template instances in a hook for the following action:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.code,{children:"woocommerce_layout_template_after_instantiation"})}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"actions",children:"Actions"}),"\n",(0,l.jsx)(t.p,{children:"The following actions are fired when blocks are added to or removed from a template, to support extensibility:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.code,{children:"woocommerce_block_template_area_{template_area_name}_after_add_block_{block_id}"})}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.code,{children:"woocommerce_block_template_after_add_block"})}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.code,{children:"woocommerce_block_template_area_{template_area_name}_after_remove_block_{block_id}"})}),"\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.code,{children:"woocommerce_block_template_after_remove_block"})}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsxs)(t.strong,{children:["In order for your action hooks to be called for all block additions and removals for a template, you should call ",(0,l.jsx)(t.code,{children:"add_action()"})," for each of these hooks before the template is instantiated, in or before an ",(0,l.jsx)(t.code,{children:"rest_api_init"})," action hook, priority 9 or lower. If your hooks are not being called, verify that you are hooking them up in an action that is called when REST API endpoints are called."]})}),"\n",(0,l.jsxs)(t.p,{children:["See the ",(0,l.jsx)(t.a,{href:"https://github.com/woocommerce/woocommerce/blob/trunk/plugins/woocommerce/src/Admin/BlockTemplates/README.md",children:"Automattic\\WooCommerce\\Admin\\BlockTemplates"})," documentation for more information about these hooks."]}),"\n",(0,l.jsx)(t.h2,{id:"sent-to-client",children:"Sent to client"}),"\n",(0,l.jsxs)(t.p,{children:["A template is sent to the client in the handler for the ",(0,l.jsx)(t.code,{children:"/wc/v3/layout-templates"})," REST API endpoint, after the ",(0,l.jsx)(t.code,{children:"rest_request_before_callbacks"})," filter hook."]}),"\n",(0,l.jsx)(t.p,{children:"Any template modification after this point will not be sent to the client."}),"\n",(0,l.jsx)(t.h2,{id:"rendered-on-client",children:"Rendered on client"}),"\n",(0,l.jsxs)(t.p,{children:["When the template is rendered on the client, all blocks in the template have their ",(0,l.jsx)(t.code,{children:"hideConditions"})," and ",(0,l.jsx)(t.code,{children:"disableConditions"})," evaluated to determine whether they should be rendered or not."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(s,{...e})}):s(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>r});var n=o(6540);const l={},i=n.createContext(l);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);