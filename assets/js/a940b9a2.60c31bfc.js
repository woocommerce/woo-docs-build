"use strict";(self.webpackChunkwoo_docs_migration=self.webpackChunkwoo_docs_migration||[]).push([[471],{853:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"contribution/contributing/CSS-SASS-coding-guidelines-and-naming-conventions","title":"CSS SASS coding guidelines and naming conventions","description":"Our guidelines are based on those used in Calypso which itself follows the BEM methodology. Refer to this doc for full details. There are a few differences in WooCommerce however which are outlined below;","source":"@site/../contribution/contributing/CSS-SASS-coding-guidelines-and-naming-conventions.md","sourceDirName":"contribution/contributing","slug":"/contribution/contributing/CSS-SASS-coding-guidelines-and-naming-conventions","permalink":"/docs/contribution/contributing/CSS-SASS-coding-guidelines-and-naming-conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/woocommerce/woocommerce/tree/docusaurus-docs-prep/docs/docs/../contribution/contributing/CSS-SASS-coding-guidelines-and-naming-conventions.md","tags":[],"version":"current","frontMatter":{"post_title":"CSS SASS coding guidelines and naming conventions"},"sidebar":"docsSidebar","previous":{"title":"Contribute to Woo","permalink":"/docs/contribution/contributing/"},"next":{"title":"API critical flows","permalink":"/docs/contribution/contributing/api-critical-flows"}}');var i=o(4848),c=o(8453);const t={post_title:"CSS SASS coding guidelines and naming conventions"},r="CSS SASS coding guidelines and naming conventions",l={},d=[{value:"Prefixing",id:"prefixing",level:2},{value:"Class names",id:"class-names",level:2},{value:"Example",id:"example",level:3},{value:"TL;DR",id:"tldr",level:4}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"css-sass-coding-guidelines-and-naming-conventions",children:"CSS SASS coding guidelines and naming conventions"})}),"\n",(0,i.jsxs)(n.p,{children:["Our guidelines are based on those used in ",(0,i.jsx)(n.a,{href:"https://github.com/Automattic/wp-calypso",children:"Calypso"})," which itself follows the BEM methodology. Refer to ",(0,i.jsx)(n.a,{href:"https://wpcalypso.wordpress.com/devdocs/docs/coding-guidelines/css.md?term=css",children:"this doc"})," for full details. There are a few differences in WooCommerce however which are outlined below;"]}),"\n",(0,i.jsx)(n.h2,{id:"prefixing",children:"Prefixing"}),"\n",(0,i.jsxs)(n.p,{children:["As a WordPress plugin WooCommerce has to play nicely with WordPress core and other plugins / themes. To minimise conflict potential all classes should be prefixed with ",(0,i.jsx)(n.code,{children:".woocommerce-"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"class-names",children:"Class names"}),"\n",(0,i.jsxs)(n.p,{children:["Calypso is built in React and uses component names to formulate CSS class names. WooCommerce Core has none of these components so uses a more traditional ",(0,i.jsx)(n.a,{href:"http://getbem.com/",children:"BEM"})," approach to ",(0,i.jsx)(n.a,{href:"http://cssguidelin.es/#bem-like-naming",children:"naming classes"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"When adding classes just remember;"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Block"})," - Standalone entity that is meaningful on its own."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Element"})," - Parts of a block and have no standalone meaning. They are semantically tied to its block."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modifier"})," - Flags on blocks or elements. Use them to change appearance or behaviour."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop {}"})," (block)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product {}"})," (nested block)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product--sale {}"})," (modifier)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__link {}"})," (element)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__title {}"})," (element)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__price {}"})," (element)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__rating {}"})," (element)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__button-add-to-cart {}"})," (element)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".woocommerce-loop-product__button-add-to-cart--added {}"})," (modifier)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," ",(0,i.jsx)(n.code,{children:".woocommerce-loop-product"})," is not the chosen classname ",(0,i.jsx)(n.em,{children:"because"})," the block is nested within ",(0,i.jsx)(n.code,{children:".woocommerce-loop"}),". It's to be specific so that we can have separate classes for single products, cart products etc. ",(0,i.jsx)(n.em,{children:"Nested blocks do not need to inherit their parents full name"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You can read more about BEM key concepts ",(0,i.jsx)(n.a,{href:"https://en.bem.info/methodology/key-concepts/",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"tldr",children:"TL;DR"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://make.wordpress.org/core/handbook/best-practices/coding-standards/css/",children:"WP Coding standards for CSS"})," unless it contradicts anything here."]}),"\n",(0,i.jsxs)(n.li,{children:["Follow ",(0,i.jsx)(n.a,{href:"https://wpcalypso.wordpress.com/devdocs/docs/coding-guidelines/css.md?term=css",children:"Calypso guidelines"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Use BEM for ",(0,i.jsx)(n.a,{href:"https://en.bem.info/methodology/naming-convention/",children:"class names"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Prefix all the things."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>r});var s=o(6540);const i={},c=s.createContext(i);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);