"use strict";(self.webpackChunkwoo_docs_migration=self.webpackChunkwoo_docs_migration||[]).push([[3839],{5743:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"extensions/getting-started-extensions/building-your-first-extension","title":"How to build your first extension","description":"Introduction","source":"@site/../extensions/getting-started-extensions/building-your-first-extension.md","sourceDirName":"extensions/getting-started-extensions","slug":"/extensions/getting-started-extensions/building-your-first-extension","permalink":"/docs/extensions/getting-started-extensions/building-your-first-extension","draft":false,"unlisted":false,"editUrl":"https://github.com/woocommerce/woocommerce/tree/docusaurus-docs-prep/docs/docs/../extensions/getting-started-extensions/building-your-first-extension.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"post_title":"How to build your first extension","sidebar_label":"Build your first extension","sidebar_position":2},"sidebar":"extensionsSidebar","previous":{"title":"Design a simple extension","permalink":"/docs/extensions/getting-started-extensions/how-to-design-a-simple-extension"},"next":{"title":"Best practices","permalink":"/docs/extensions/getting-started-extensions/extension-development-best-practices"}}');var i=o(4848),t=o(8453);const r={post_title:"How to build your first extension",sidebar_label:"Build your first extension",sidebar_position:2},d="How to build your first extension",l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Bootstrapping Your Extension",id:"bootstrapping-your-extension",level:2},{value:"Setting Up a Developer Environment",id:"setting-up-a-developer-environment",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Reference",id:"reference",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"how-to-build-your-first-extension",children:"How to build your first extension"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["This guide will teach you how to use ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@woocommerce/create-woo-extension",children:"create-woo-extension"})," to scaffold a WooCommerce extension. There are various benefits to using create-woo-extension over manually creating one from scratch, including:"]}),"\n",(0,i.jsx)(n.p,{children:"There is less boilerplate code to write, and fewer dependencies to manually setup."}),"\n",(0,i.jsx)(n.p,{children:"Modern features such as Blocks are automatically supported, and unit testing, linting, and Prettier IDE configuration are ready to use."}),"\n",(0,i.jsxs)(n.p,{children:["Once your extension is set up, we will show you how to instantly spin up a development environment using ",(0,i.jsx)(n.a,{href:"https://developer.wordpress.org/block-editor/reference-guides/packages/packages-env/",children:"wp-env"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Before getting started, you will need the following tools installed on your device:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://nodejs.org/en/learn/getting-started/how-to-install-nodejs",children:"Node.js"})," with NPM"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"Docker"})," (must be running to use wp-env)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://getcomposer.org/doc/00-intro.md",children:"Composer"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This guide also presumes that you are familiar with working with the command line."}),"\n",(0,i.jsx)(n.h2,{id:"bootstrapping-your-extension",children:"Bootstrapping Your Extension"}),"\n",(0,i.jsx)(n.p,{children:"Open your terminal and run"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:" npx @wordpress/create-block -t @woocommerce/create-woo-extension my-extension-name\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you would like to set a custom extension name, you can replace ",(0,i.jsx)(n.code,{children:"my-extension-name"})," with any slug. Please note that your slug must not have any spaces."]}),"\n",(0,i.jsxs)(n.p,{children:["If you see a prompt similar to ",(0,i.jsx)(n.code,{children:"Need to install the following packages"}),": ",(0,i.jsx)(n.code,{children:"@wordpress/create-block@4.34.0. Ok to proceed?"}),", press ",(0,i.jsx)(n.code,{children:"Y"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Once the package finishes generating your extension, navigate into the extension folder using"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:" cd my-extension-name\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You should then install the extension dependencies using ",(0,i.jsx)(n.code,{children:"npm install"}),"  and build it using ",(0,i.jsx)(n.code,{children:"npm run build"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You just spun up a WooCommerce extension! Your extension will have the following file structure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"my-extension-name"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block.json"})," - contains metadata used to register your custom blocks with WordPress. Learn more."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"build"})," - the built version of your extension which is generated using npm run build. You shouldn't directly modify any of the files in this folder."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"composer.json"})," - contains a list of your PHP dependencies which is referenced by Composer."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"composer.lock"})," - this file allows you to control when and how to update these dependencies"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"includes"}),' - The primary purpose of an "includes" folder in PHP development is to store reusable code or files that need to be included or required in multiple parts of a project. This is a PHP developer convention.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"languages"})," - contains POT files that are used to localize your plugin."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"my-extension-name.php"})," - your plugin entry point that registers your plugin with WordPress."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"node-modules"})," - help you form the building blocks of your application and write more structured code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"package.json"})," - is considered the heart of a Node project. It records metadata, and installs functional dependencies, runs scripts, and defines the entry point of your application."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"README.md"})," - An introduction and instructional overview of your application. Any special instructions, updates from the author, and details about the application can be written in text here."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"src"})," - keeps the root directory clean and provides a clear separation between the source code and other assets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tests"})," - can hold unit tests for your application, keeps them separate from source files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vendor"})," - holds project dependencies, and 3rd party code that you did not write"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"webpack.config.js"})," - webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-a-developer-environment",children:"Setting Up a Developer Environment"}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using ",(0,i.jsx)(n.code,{children:"wp-env"})," to spin up local development environments. You can ",(0,i.jsx)(n.a,{href:"https://make.wordpress.org/core/2020/03/03/wp-env-simple-local-environments-for-wordpress/",children:"learn more about wp-env here"}),". If you do not already have wp-env installed locally, you can install it using\n",(0,i.jsx)(n.code,{children:"npm -g i @wordpress/env"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Once you have installed ",(0,i.jsx)(n.code,{children:"wp-env"}),", and while still inside your ",(0,i.jsx)(n.code,{children:"my-extension-name"})," folder, run ",(0,i.jsx)(n.code,{children:"wp-env"})," start. After a few seconds, a test WordPress site with your WooCommerce and your extension installed will be running on ",(0,i.jsx)(n.code,{children:"localhost:8888"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If you did not set a custom name for your extension, you can visit ",(0,i.jsx)(n.code,{children:"wp-admin/admin.php?page=wc-admin&path=%2Fmy-extension-name"})," to see the settings page generated by /src/index.js. The default username/password combination for ",(0,i.jsx)(n.code,{children:"wp-env"})," is ",(0,i.jsx)(n.code,{children:"admin"})," / ",(0,i.jsx)(n.code,{children:"password"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Now that you\u2019ve bootstrapped your extension, you can finally add some features! Here are some simple ones you could include:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.woocommerce.com/docs/how-to-add-a-custom-field-to-simple-and-variable-products/",children:"How to add a custom field to simple and variable products"})}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@woocommerce/create-woo-extension",children:"Visit @woocommerce/create-woo-extension on NPM for package reference"}),"\n",(0,i.jsx)(n.a,{href:"https://developer.wordpress.org/block-editor/reference-guides/packages/packages-env/#command-reference",children:"Check out wp-env's command reference to learn more about advanced functionality"})]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>d});var s=o(6540);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);